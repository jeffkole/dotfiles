set nocompatible

" First things first, fire up pathogen
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

syntax on
" highlight CursorLine term=underline cterm=underline ctermfg=none ctermbg=none
highlight Comment ctermfg=darkcyan

" change the mapleader from \ to ,
let mapleader=","

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" Allow buffers to be hidden instead of closed
set hidden

" Read files again if they changed on the filesystem
set autoread

" searching
set ignorecase
" ignore case if search pattern is all lowercase, case-sensitive otherwise
set smartcase
set incsearch
set hlsearch
" Clear search highlight
nmap <silent> ,/ :nohlsearch<CR>

" editing
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
" use multiple of shiftwidth when indenting with '<' and '>'
set shiftround
set autoindent
" copy the previous indentation on autoindenting
set copyindent
" allow backspacing over everything in insert mode
set backspace=indent,eol,start
" Change the pwd to the directory of the file
set autochdir
" Turn off folding (I hate it)
set nofoldenable
if has("autocmd")
  filetype plugin indent on
endif

" formatting
set textwidth=80
set formatoptions-=t " turn off automatic wrapping with textwidth or wrapmargin
set formatoptions-=o " turn off comment leader insertion on 'o' or 'O'
set formatoptions+=1 " do not break after a one-letter word

" save files when switching buffers
" set autowrite

" UI
set cursorline
set ruler
set showcmd
set showmode
set laststatus=2 " always put in the status line
set number
" Set tab-completion to be more bash-like
set wildmode=longest,list,full
" Could also use set wildmenu, but it is unclear if I want that yet

" Set the statusline to the standard from 'ruler' along with the fugitive
" status
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P

set visualbell

" turn off swapfile usage
set noswapfile

" Some settings for Clojure & ClojureScript editing
if has("autocmd")
  autocmd VimEnter *.clj,*.cljs RainbowParenthesesToggle
  autocmd Syntax *.clj,*.cljs RainbowParenthesesLoadRound
  autocmd Syntax *.clj,*.cljs RainbowParenthesesLoadSquare
  autocmd Syntax *.clj,*.cljs RainbowParenthesesLoadBraces
endif

" MacVim UI

if has("gui_macvim")
  colorscheme solarized

  " disable macvim's fancy cmd and option movements, making vim more pure
  let macvim_skip_cmd_opt_movement = 1
  " Do not show the toolbar
  set guioptions-=T
  set background=dark

  " show a vertical line at column XX
  if exists('+colorcolumn')
    set colorcolumn=80
    " Make the vertical bar a nice dark grey
    " highlight ColorColumn ctermbg=darkgrey guibg=darkgrey
  endif
endif

" Settings for CommandT
let g:CommandTMaxHeight=15 " take up no more than 15 lines for the menu
let g:CommandTFileScanner="find"
let g:CommandTMatchWindowReverse=1 " put the best match at the bottom of the list
" Ignore files in node_modules and bower_components directories, along with
" anything else listed in the |'wildignore'| global.
let g:CommandTWildIgnore="**/node_modules/*,**/bower_components/*," . &wildignore

" Settings for JSHint2
let g:jshint2_read=1
let g:jshint2_save=1
let g:jshint2_confirm=0

" Settings for javascript-libraries-syntax
let g:used_javascript_libs='underscore,react,flux,handlebars,jasmine'

" vi: ts=2 sw=2
